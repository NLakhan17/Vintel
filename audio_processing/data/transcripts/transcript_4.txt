We are going to look into linear regression with multiple variables, also known as multivariate regression. Using this, we are going to predict the home prices in Monroe Township, New Jersey. Here in this table, I have various metrics available, such as area, bedroom, age, and these are the factors that the ultimate price depends on. In the previous tutorial, we looked at simple linear regression with one variable where price was dependent only on area. But now we are making our problem little more complex by adding bedrooms and age. Because as we know, in normal life, the home price depends on multiple factors, not just the square foot area. After we build a model, we are going to predict prices of these two homes. Okay, now, before we tackle any machine learning problem, the first thing that needs to be done is we need to carefully analyze our data set or our training data. When I look at this data set, the first thing I notice is there is a data point missing here. So we have to do something to handle this missing data point. Another thing that I notice is there is a linear relationship between each of these factors and our target variable, which is price. For example, as the home gets older, the price tends to go down. Here I have 3200 sqft home with 18 years of age and the price is more than 600,000, whereas I have little bigger home here, 3600 sqft. But since the age is more, the price is less than the one whose square foot area is less. Okay? Similarly, as the area and number of bedroom goes up, the price also tend to go up. So overall, by analysis, we can say that for this data set, we can use linear regression safely. Okay, if we go into a math a little bit, then our linear equation will look something like this, where price is dependent on three factors, area, bedroom, age. And these three factors are called independent variables or features. Features is a term that you will hear often while going through machine learning material. It is nothing but an independent variable and the price is a dependent variable. M one, m two and m three are called coefficients and b is an intercept. It can be generalized into this equation where you can have n number of independent variables. I just have three here, but you can have more than three. Now, the topics that we are going to cover during this tutorial is first we'll look into how to handle that missing data point, and then I will build a model in a python code. Alright, now let's go back to our Jupyter notebook. So, Jupyter notebook is something I'm using to write my code. You can use Pycharm or any other ide of your choice. I have a CSV file here where I have all my home prices along with these factors. So the first thing I have done here is imported unnecessary modules and then I am going to load my data into pandas data frame, home prices dot CSV. If you don't know about pandas data frame, then I have a separate pandas tutorial. Pandas is extremely useful while doing machine learning, so I highly recommend that if you don't know about it already. Okay, so now I have my data frame ready and I can see this null data point and I need to handle it. So the way I'm thinking I will handle this is I will take a median of this, this entire column and put it here. Since number of bedrooms are missing, taking median seems like a safe assumption. Alright, so first thing I will do here is calculate the median. And how do you calculate the median of bedroom? So df bedrooms will give you pandas series and when you do this it gives you a median. Now you have three bedrooms appearing two times. That's why it's giving the average of it, which is 3.5. I just want to keep it integer the whole number and for that I will just import a math model and I will say median bedrooms is equal to mat dot floor and the medium bedrooms would be three. Okay, and the way I fill this columns na values is using fill na function. So fill na function is available on panda series. So df bedrooms will give you one column which is nothing but a panda series. On that I call fill na function and I want to fill all na values with this median number. So you can see that I got a new series where this nn value is now replaced with a median number. I need to assign this back to original series so that my data frame gets updated. And when I print my data frame, I can see my data frame looks much better. So our data pre processing step is over. So again, to summarize, before applying any machine learning model, you need to pre process your data. You need to clean your data. Because data is always messy, there are problems with it. So you need to fix the errors, kind of prepare your data and then apply your actual machine learning model. Using that data, you train the model. Okay, so now my data frame looks good. I am all set to train my model. So the first thing I am going to do is create a linear regression object. So I have imported linear model here and using this I will create linear regression class object. The object got created fine. Now I will call fit method. So you will use this fit method often and this method is used to train your model using your training set here. My training set is a data frame. So if you want to create a data frame using your existing data frame, you can use this syntax of using two, two brackets, okay? And my independent variables are area bedrooms and age. And my target variable is price. When I execute this, my model is now ready. Once it is ready, it's a good idea to take a look at the coefficients. So the coefficients I got was this. Just to summarize what these coefficients are in this equation, m one, m two and m three are coefficients. So this is m one, this is m two, and this is m three. Now you'll wonder where is my intercept. Intercept is stored in another variable called intercept. So this number is this b. So once we have m one, m two, m three, you have area bedrooms, age, which are your independent variable. Now you can calculate the price. So here I can say predicted. Okay, so I can predict home price of a home whose dimensions are there. So 303,000 square foot, three bedroom and 40 year old. Okay, so 3340. That's what I'm going to supply here, 3340. And if, okay, so 3000 square foot, three bedroom, 40 year old. And I found find the price to be this much. Alright, so this home is, you can see that the price, the price of the 3000 square foot home here is 565,000. But here, got it. You got it much less. And the reason is, I think mainly age. So here it is like 40 year old versus this home is 15 year old. Okay, so if I make it 15 year, I will get around. It is little bit skewed, but you get the ballpark number. All right, so the price is this. And now I want to know how it calculated this price. So it is coefficient, coefficient multiplied by your square foot plus another coefficient multiplied by your bedrooms. The third coefficient multiplied by the age here it is missing an intercept. So we need to add intercept also. So plus intercept. And when you do that, you get that price right here. Because of rounding, factor is not showing the full value, but it is essentially the same price. Similarly, you can predict the price of the home where the values of those factors is 2500, four and five. 2500 four bedroom, only five year old. This home is very new, so I expect the price to be little higher than average. So here you can see that 58, $588,000 is the price for this home, which was 2600. The price was 550. But this home's price is more. And it is because this home was 20 year old, whereas this home is only five year old and it has one more bedroom. See, this guy had only three bedrooms, so you can see how different factors play a significant role. Okay, that's all I had. Now we are going to do an exercise. So the exercise is for you guys to practice what you have learned. In this tutorial, I have this CSV file which contains hiring data for a form here based on the experience, the written test score and personal interview score, candidate salary is decided and I have some past data. Using this data you have to build a model for your HR department where they can feed in experience and various scores and they can get some idea on what kind of salary they need to offer to a candidate. Now, in this data set you will find few interesting things. First of all, in experience these two cells don't have value, so you can just assume them to be zero here. Also, there is one data point missing here. You can't, you shouldn't assume it to be zero. Maybe take a median here. Alright? And also usually linear regression models work on numbers, whereas here I have a string. So the experience, again it's a number, is just that. Our data set contains word for that particular number. For this you can use Python's word to number module to convert that string into a number. Alright? So just do pip install and use the model, alright? And using this, what you're going to do is figure out the salary for two candidates who has these statistics. So one candidate has two years experience, scored nine and six in two tests. Second candidate, an excellent guy, twelve years experience, scored ten out of ten in both of it. And you have to find out recommended salary for these two candidates. If you go to my GitHub page. Let me go to my GitHub page. I have all the tutorials available on my GitHub, so you should go and download it. So here this notebook is whatever I just went through. And in the exercise folder I have a CSV file which you should download and try to practice on your own. And then you can compare your answer to this notebook where I have provided the entire solution. But don't get tempted too much and don't go and just start looking at the solution. First you should try to solve on your own. Right, so that's all I had for this tutorial, thank you very much.